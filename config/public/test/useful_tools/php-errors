#!/usr/bin/env perl
use strict;
use warnings;

# summarize php error log

use Date::Parse;
use Getopt::Long;
use Storable;
use File::Basename;

my %o = (
    number => 10,
    tempdir => '/tmp/php-errors',
    readfile => undef,
    loadfile => undef,
);
GetOptions(\%o, 'number=i', 'tempdir=s', 'readfile=s', 'loadfile=s', 'show') or die "invalid options";

if (not -t and not $o{readfile} and not $o{loadfile}) {
    $o{readfile} = '-';
}

my %err;
if ($o{readfile}) {
    open my $in, '<'.$o{readfile} or die "couldn't read $o{readfile}: $!";
    while (<$in>) {
        print "\rtotal lines: ", commify($.);
        examine($_);
    }
    print "\n";

    my $tmp = basename($o{readfile});
    system "mkdir -p '$o{tempdir}'";
    store(\%err, "$o{tempdir}/$tmp");

    print "results stored: --loadfile '$o{tempdir}/$tmp'\n";
}
elsif ($o{loadfile}) {
    my $tmp = basename($o{loadfile});
    %err = %{ retrieve("$o{tempdir}/$tmp") };
}
else {
    die "one of --readfile or --loadfile is required";
}

my $common_path = longest_common_prefix(map {$err{$_}{file}} keys %err);

my $i = 1;
foreach my $e (sort err_sort values %err) {
    my $file = $e->{file};
    $file =~ s/^\Q$common_path//;
    my $most_frequent_line = (sort {$e->{line}{$b} <=> $e->{line}{$a}} keys %{$e->{line}})[0];
    my $date = scalar localtime $e->{date};
    $date =~ s/ 2012$//;
    my $fmt = join("\t", '%s', '%s', '%s', '%s +%d')."\n";
    printf $fmt, commify($e->{count}), $date, $e->{message}, $file, $most_frequent_line;

    if ($o{show}) {
        my $path = './';
        while (($path =~ tr,/,,) <= 10) {
            if (-f $path.$file) {
                open my $fh, $path.$file or die $!;
                while (<$fh>) {
                    printf("%04s: %s", $., $_) if abs($most_frequent_line - $.) <= 2;
                }
                last;
            }
            $path .= '/../';
        }
    }

    last if ++$i > $o{number};
}

sub longest_common_prefix {
    my $prefix = shift;
    for (@_) {
        chop $prefix while (! /^\Q$prefix/);
    }
    return $prefix;
}

sub commify {
    my $n = $_[0];
    $n =~ s/(\d)(?=(\d{3})+(\D|$))/$1\,/go;
    return $n;
}

sub err_sort {
    return $b->{count} <=> $a->{count}
    or $b->{date} <=> $a->{date};
}

sub examine {
    my ($line) = @_;
    chomp $line;
    # [15-Aug-2012 00:05:05] PHP Notice:  Undefined variable: lastDate in /home/digvijay/SeeYourImpact.org/wp-content/mu-plugins/syi-widgets.php on line 838
    # [14-Aug-2012 02:16:03] PHP Warning:  Missing argument 2 for Team::get_team_pages(), called in /home/digvijay/SeeYourImpact.org/wp-content/mu-plugins/teams.php on line 182 and defi
    if ($line =~ /^\[(.*?)\] PHP .*?:\s+(.*?)( in \S+|, called in \S+) on line (\d+)/) {
        my ($date, $message, $file, $line) = ($1, $2, $3, $4);
        my $id = "$message$file";
        $file =~ s/^.*? in //;

        if (not exists $err{$id}) {
            $err{$id} = {
                count => 0,
                message => $message,
                file => $file,
                line => {},
            };
        }

        my $h = $err{$id};
        $h->{count}++;
        $h->{line}{$line}++;
        $h->{date} = str2time($date, "UTC");
    }
}
